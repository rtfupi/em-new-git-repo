#!/bin/sh
##.###########################################################################.
##| Copyright (C) Eugene V. Markov 2024
##!
##! \file    em-new-git-repo
##! \author  Eugene V. Markov <upirtf@gmail.com>
##! \date    2024-06-18 18:25:06 +05:00
##! \version 0.1
##!
##! \brief  ...
##!         ...
##!
##! ...
##! ...
##!
##! \copyright GNU General Public License v2.
##|
##'###########################################################################'

SN=`basename $0`

EM_VERSION=0.1


##.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.
##| Проверка наличия команд в системе.
##|
##'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
EM_CHECK_CMD="cmd1 cmd2 ..."
EM_FL=
for cmd in ${EM_CHECK_CMD};do
    if ! type ${cmd} > /dev/null 2>&1; then
        cmd=$(printf "*** Error: %s: command not found." "${cmd}")
        logger -p local2.info -t ${SN} "${cmd}"; echo "${cmd}" >&2
        EM_FL=yes
    fi
done
[ y${EM_FL} = yyes ] && exit 1



##.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.
##| Для отладки c использованием em-libshell.
##|
##'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
# 8< DEBUG 8<
# set -x
# logger -p local2.info -t ${SN} "><"
 exec > "/tmp/${SN}.log" 2>&1
. "../../ext/em-libshell/lib/em-source.sh"
{
    echo
    echo
    echo " =========================="
# }
} > "/tmp/${SN}.log"
# >8 DEBUG >8



##.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.
##| Logging.
##|
##'~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
# Уровень логирования в виде двух разрядного числа. Младший разряд отвечает
# за syslog, старший - за stderr.
EM_LIB_SYSLOG_LEVEL=00 # 99 - показывать все;
                       # 00 - только самое необходимое.

# Глобальные переменные для раздельной блокировки каналов логирования.
EM_LIB_SYSLOG_SYSLOG= # пустая строка - разрешает syslog
EM_LIB_SYSLOG_STDERR= # пустая строка - разрешает stderr



##.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.
##| External library.
##|
##'%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'

em_source "../../ext/em-libshell/lib/syslog/em_lib_syslog_logger.sh"
em_source "../../ext/em-libshell/lib/syslog/em_lib_syslog_cmd_not_found.sh"

em_source "../../ext/em-libshell/lib/misc/em_lib__debug.sh"

em_source "../../ext/<category>/<name>.sh"

# Verifying that commands are available.
em_lib_syslog_cmd_not_found "${EM_LIB_CHECK_CMD}" || exit 1


##.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.
##| Local library
##|
##'%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'

##.=======================================================================.
##! \brief .
##!
##! \param $1 - .
##!
##! \return  - return code :
##!                 0 -
##!                 1 -
##!            stdout :
##!            stderr :
##|
##'======================================================================='
em_lib_ () {
    local xxx

}
#export -f em_lib_


##.=======================================================================.
##! \brief Information about arguments.
##|
##'======================================================================='
help_message ()
{
    cat << EOF
brief...

...
...

Usage: ${SN} {--help|-h}|{--version|-V}
   or: ${SN} ...
   or: ${SN} ...

Options:
  -o, --option NAME
                 ...
  -O             ...
  -V, --version  version info.
  -h, --help     help info.

Examples:
.......................................
...:

${SN} ...

...

.......................................
...:

${SN} ...

...

EOF
    return 0
}


##.=======================================================================.
##! \brief Information about version.
##|
##'======================================================================='
version_message ()
{
    cat << EOF
${SN} v${EM_VERSION}

Copyright (c) Eugene V. Markov 2024
License GPLv2: GNU GPL version 2 <https://gnu.org/licenses/gpl.html>.
EOF
    return 0
}



##.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.
##| Main part.
##|
##'%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'

HELP_MESS=
VER_MESS=
ERROR_OPTION=
ERROR_OPTION_LST=

EM_OPTION=

EM_VAL=

while [ -n "$1" ]
do
    case "$1" in
        -V|--version) VER_MESS=yes;;
        --help|-h) HELP_MESS=yes;;
        --option|-o) OPTION="yes";;
        --Option|-O) shift; EM_OPTION1="${1}";;
        -*) ERROR_OPTION=yes;ERROR_OPTION_LST="${ERROR_OPTION_LST} $1";;
        *) EM_VAL="${1}";;
    esac
    shift
done

if [ -n "${ERROR_OPTION}" ]; then
    echo "***Error: ${ERROR_OPTION_LST}: no such options."
    help_message
    exit 1
fi

if [ -n "$HELP_MESS" ]; then help_message; exit 0; fi

if [ -n "$VER_MESS" ]; then version_message; exit 0; fi

...

exit

# (em:timestamp-insert)
